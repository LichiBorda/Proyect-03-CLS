(function( $ ) {
	'use strict';

	/**
	 * All of the code for your public-facing JavaScript source
	 * should reside in this file.
	 *
	 * Note: It has been assumed you will write jQuery code here, so the
	 * $ function reference has been prepared for usage within the scope
	 * of this function.
	 *
	 * This enables you to define handlers, for when the DOM is ready:
	 *
	 * $(function() {
	 *
	 * });
	 *
	 * When the window is loaded:
	 *
	 * $( window ).load(function() {
	 *
	 * });
	 *
	 * ...and/or other possibilities.
	 *
	 * Ideally, it is not considered best practise to attach more than a
	 * single DOM-ready or window-load handler for a particular page.
	 * Although scripts in the WordPress core, Plugins and Themes may be
	 * practising this, we should strive to set a better example in our own work.
	 */

	document.addEventListener('DOMContentLoaded', function () {
		var tabButtons = document.querySelectorAll('.tab-button');
		var tabContents = document.querySelectorAll('.tab-pane');

		tabButtons.forEach(function (button) {
			button.addEventListener('click', function () {
				var tabId = this.getAttribute('data-tab');

				// Remove 'active' class from all buttons and contents
				tabButtons.forEach(function (btn) {
					btn.classList.remove('active');
				});
				tabContents.forEach(function (content) {
					content.classList.remove('active');
				});

				// Add 'active' class to the clicked button and corresponding content
				this.classList.add('active');
				document.getElementById(tabId).classList.add('active');
			});
		});
	});
})( jQuery );
